# Generated by Django 3.2.5 on 2021-07-14 18:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Storage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=350, verbose_name='Branch Name')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=350, verbose_name='Brand Name')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(choices=[('hoods', 'Hoods'), ('slim-hobs', 'Slim Hobs'), ('ovens', 'Ovens'), ('cookers', 'Cookers')], max_length=350, verbose_name='Category Name')),
                ('category_feeding_source', models.CharField(choices=[('natural-gas', 'Natural Gas'), ('gas-cylinder', 'Gas Cylinder'), ('internal-expulsion', 'Internal Expulsion'), ('external-expulsion', 'External Expulsion')], max_length=350, verbose_name='Category Feeding Source')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('related_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Configurations.brand', verbose_name='Related Brand')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=350, verbose_name='City Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='ClientCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_category', models.CharField(max_length=350, verbose_name='Client Category')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Client Category',
                'verbose_name_plural': 'Clients Categories',
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distributor_name', models.CharField(max_length=350, verbose_name='distributor_name')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Distributor',
                'verbose_name_plural': 'Distributors',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=350, verbose_name='Region Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='TicketService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=350, verbose_name='Service Name')),
                ('service_price', models.FloatField(verbose_name='Service Price')),
            ],
            options={
                'verbose_name': 'Ticket Service',
                'verbose_name_plural': 'Ticket Services',
            },
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_status', models.CharField(max_length=350, verbose_name='Ticket Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Ticket Status',
                'verbose_name_plural': 'Tickets Status',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_type', models.CharField(max_length=350, verbose_name='Ticket Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Ticket Type',
                'verbose_name_plural': 'Ticket Types',
            },
        ),
        migrations.CreateModel(
            name='TechnicianAssignedCustody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('assigned_custodies', models.ManyToManyField(to='Storage.Custody', verbose_name='Assign Custodies')),
                ('related_technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Technician Assigned Custody',
                'verbose_name_plural': 'Technicians Assigned Custodies',
            },
        ),
        migrations.CreateModel(
            name='CommonDiagnostics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(max_length=350, verbose_name='Issue Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('related_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Configurations.category', verbose_name='Related Category')),
            ],
            options={
                'verbose_name': 'Common Diagnostic',
                'verbose_name_plural': 'Common Diagnostics',
            },
        ),
    ]
